{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Chrome/Documents/preppath/.next-internal/server/app/%28root%29/interview/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getCurrentUser as '0023ce29113356bffa06408fa4889d8a18fe44aa9e'} from 'ACTIONS_MODULE0'\nexport {isAuthenticated as '00367a95859b31ba4c6cc1ce398c215f0fc4d64cc2'} from 'ACTIONS_MODULE0'\nexport {signUp as '4007ef00389f0c29a04e06284590d5be5e8fe5af35'} from 'ACTIONS_MODULE0'\nexport {signIn as '4029fa933561da63be60bfd77aaea6abc0a1347736'} from 'ACTIONS_MODULE0'\nexport {setSessionCookie as '40eedabc015af9511c69c5c97c960db6842617a438'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Chrome/Documents/preppath/components/Agent.tsx"],"sourcesContent":["import React from 'react'\r\nimport Image from 'next/image'\r\n\r\nenum CallStatus {\r\n    inactive = \"INACTIVE\",\r\n    CONNECTING = \"CONNECTING\",\r\n    ACTIVE = \"ACTIVE\",\r\n    FINISHED = \"FINISHED\",\r\n}\r\n\r\nconst Agent = ({ userName }: AgentProps ) => {\r\n    const callStatus = CallStatus.FINISHED; // This should be dynamic based on the call status\r\n    const isSpeaking = true;\r\n    const messages = [\r\n        'Whats your name?',\r\n        'My name is Rohit Sarkar, nice to meet you',\r\n    ]\r\n    const lastMessage = messages[messages.length - 1];\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"call-view\">\r\n                <div className=\"card-interviewer\">\r\n                    <div className=\"avatar\">\r\n                        <Image src=\"/ai-avatar.png\" alt=\"vapi\" width={65} height={54} className=\"object-cover\" />\r\n                        {isSpeaking && <span className=\"animate-speak\"/> }\r\n\r\n\r\n\r\n                    </div>\r\n                    <h3>AI Interviewer</h3>\r\n\r\n                </div>\r\n                <div className=\"card-border\">\r\n                    <div className=\"card-content\">\r\n                        <Image src=\"/user-avatar.png\" alt=\"user avatar\" width={540} height={540} className=\"rounded-full object-cover size-[120px]\" />\r\n                        <h3>{userName}</h3>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n                {messages.length > 0 && (\r\n                    <div className=\"transcript-border\">\r\n                        <div className=\"transcript\">\r\n                            <p key={lastMessage} className={cn('transcript-opacity duration-500 opacity-0', 'animate-fadeIn opacity-100')}>\r\n                                {lastMessage}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            <div className=\"w-full flex justify-center\">\r\n                {callStatus !== CallStatus.ACTIVE ? (\r\n                    <button className=\"relative btn-call\">\r\n                        <span className={cn('absolute animate-ping rounded-full opacity-75', callStatus !== 'CONNECTING' & 'hidden')}\r\n                        />\r\n\r\n                            <span>\r\n                                {callStatus === 'INACTIVE' || callStatus === 'FINISHED' ? 'call' : '...'}\r\n                            </span>\r\n                        \r\n                    </button>\r\n                ) : (\r\n                    <button className=\"btn-disconnect\">\r\n                        End\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Agent"],"names":[],"mappings":";;;;AACA;;;AAEA,IAAA,AAAK,oCAAA;;;;;WAAA;EAAA;AAOL,MAAM,QAAQ,CAAC,EAAE,QAAQ,EAAc;IACnC,MAAM,yBAAkC,kDAAkD;IAC1F,MAAM,aAAa;IACnB,MAAM,WAAW;QACb;QACA;KACH;IACD,MAAM,cAAc,QAAQ,CAAC,SAAS,MAAM,GAAG,EAAE;IAGjD,qBACI;;0BACI,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAI,WAAU;;kDACX,8OAAC,6HAAA,CAAA,UAAK;wCAAC,KAAI;wCAAiB,KAAI;wCAAO,OAAO;wCAAI,QAAQ;wCAAI,WAAU;;;;;;oCACvE,4BAAc,8OAAC;wCAAK,WAAU;;;;;;;;;;;;0CAKnC,8OAAC;0CAAG;;;;;;;;;;;;kCAGR,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC;4BAAI,WAAU;;8CACX,8OAAC,6HAAA,CAAA,UAAK;oCAAC,KAAI;oCAAmB,KAAI;oCAAc,OAAO;oCAAK,QAAQ;oCAAK,WAAU;;;;;;8CACnF,8OAAC;8CAAI;;;;;;;;;;;;;;;;;;;;;;;YAMZ,SAAS,MAAM,GAAG,mBACf,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC;wBAAoB,WAAW,GAAG,6CAA6C;kCAC3E;uBADG;;;;;;;;;;;;;;;0BAOxB,8OAAC;gBAAI,WAAU;0BACV,qDACG,8OAAC;oBAAO,WAAU;;sCACd,8OAAC;4BAAK,WAAW,GAAG,iDAAiD,eAAe,eAAe;;;;;;sCAG/F,8OAAC;sCACI,uCAAyD;;;;;;;;;;;;;;;;;;;AAY1F;uCACe","debugId":null}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Chrome/Documents/preppath/app/%28root%29/interview/page.tsx"],"sourcesContent":["import React from 'react'\r\nimport Agent from '@/components/Agent';\r\n\r\nconst Page = () => {\r\n    return (\r\n        <>\r\n            <h3>Interview Generation</h3>\r\n\r\n            <Agent userName=\"You\" userId=\"user1\" type=\"generate\" />\r\n        </>\r\n    )\r\n}\r\nexport default Page"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,OAAO;IACT,qBACI;;0BACI,8OAAC;0BAAG;;;;;;0BAEJ,8OAAC,oHAAA,CAAA,UAAK;gBAAC,UAAS;gBAAM,QAAO;gBAAQ,MAAK;;;;;;;;AAGtD;uCACe","debugId":null}}]
}