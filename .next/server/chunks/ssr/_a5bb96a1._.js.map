{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Chrome/Documents/preppath/.next-internal/server/app/%28root%29/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {signOut as '004e92eb88daa5fa32a63311eea3a02947acf28f44'} from 'ACTIONS_MODULE0'\nexport {clearSessionCookie as '0052e1a8623df13275cfce9460937d7ba61d86e065'} from 'ACTIONS_MODULE0'\nexport {isAuthenticated as '009d3863d6c7629cfe280100dedbe3fd3b93195b25'} from 'ACTIONS_MODULE0'\nexport {getCurrentUser as '00b23e29c45dba506d833dc922ad893beeb4b3df8f'} from 'ACTIONS_MODULE0'\nexport {setSessionCookie as '40597547d8ee9058aaea623e43a4a0814b0ca0c261'} from 'ACTIONS_MODULE0'\nexport {signUp as '40a628370d6ad0e34b3584aa6c4090bc466c697581'} from 'ACTIONS_MODULE0'\nexport {signIn as '40f1ad4179e58065229cf09243d31e1d43ea0109b3'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Chrome/Documents/preppath/constants/index.ts"],"sourcesContent":["// import { CreateAssistantDTO } from \"@vapi-ai/web/dist/api\";\n// import { z } from \"zod\";\n\nexport const mappings = {\n  \"react.js\": \"react\",\n  reactjs: \"react\",\n  react: \"react\",\n  \"next.js\": \"nextjs\",\n  nextjs: \"nextjs\",\n  next: \"nextjs\",\n  \"vue.js\": \"vuejs\",\n  vuejs: \"vuejs\",\n  vue: \"vuejs\",\n  \"express.js\": \"express\",\n  expressjs: \"express\",\n  express: \"express\",\n  \"node.js\": \"nodejs\",\n  nodejs: \"nodejs\",\n  node: \"nodejs\",\n  mongodb: \"mongodb\",\n  mongo: \"mongodb\",\n  mongoose: \"mongoose\",\n  mysql: \"mysql\",\n  postgresql: \"postgresql\",\n  sqlite: \"sqlite\",\n  firebase: \"firebase\",\n  docker: \"docker\",\n  kubernetes: \"kubernetes\",\n  aws: \"aws\",\n  azure: \"azure\",\n  gcp: \"gcp\",\n  digitalocean: \"digitalocean\",\n  heroku: \"heroku\",\n  photoshop: \"photoshop\",\n  \"adobe photoshop\": \"photoshop\",\n  html5: \"html5\",\n  html: \"html5\",\n  css3: \"css3\",\n  css: \"css3\",\n  sass: \"sass\",\n  scss: \"sass\",\n  less: \"less\",\n  tailwindcss: \"tailwindcss\",\n  tailwind: \"tailwindcss\",\n  bootstrap: \"bootstrap\",\n  jquery: \"jquery\",\n  typescript: \"typescript\",\n  ts: \"typescript\",\n  javascript: \"javascript\",\n  js: \"javascript\",\n  \"angular.js\": \"angular\",\n  angularjs: \"angular\",\n  angular: \"angular\",\n  \"ember.js\": \"ember\",\n  emberjs: \"ember\",\n  ember: \"ember\",\n  \"backbone.js\": \"backbone\",\n  backbonejs: \"backbone\",\n  backbone: \"backbone\",\n  nestjs: \"nestjs\",\n  graphql: \"graphql\",\n  \"graph ql\": \"graphql\",\n  apollo: \"apollo\",\n  webpack: \"webpack\",\n  babel: \"babel\",\n  \"rollup.js\": \"rollup\",\n  rollupjs: \"rollup\",\n  rollup: \"rollup\",\n  \"parcel.js\": \"parcel\",\n  parceljs: \"parcel\",\n  npm: \"npm\",\n  yarn: \"yarn\",\n  git: \"git\",\n  github: \"github\",\n  gitlab: \"gitlab\",\n  bitbucket: \"bitbucket\",\n  figma: \"figma\",\n  prisma: \"prisma\",\n  redux: \"redux\",\n  flux: \"flux\",\n  redis: \"redis\",\n  selenium: \"selenium\",\n  cypress: \"cypress\",\n  jest: \"jest\",\n  mocha: \"mocha\",\n  chai: \"chai\",\n  karma: \"karma\",\n  vuex: \"vuex\",\n  \"nuxt.js\": \"nuxt\",\n  nuxtjs: \"nuxt\",\n  nuxt: \"nuxt\",\n  strapi: \"strapi\",\n  wordpress: \"wordpress\",\n  contentful: \"contentful\",\n  netlify: \"netlify\",\n  vercel: \"vercel\",\n  \"aws amplify\": \"amplify\",\n};\n\n// export const interviewer: CreateAssistantDTO = {\n//   name: \"Interviewer\",\n//   firstMessage:\n//     \"Hello! Thank you for taking the time to speak with me today. I'm excited to learn more about you and your experience.\",\n//   transcriber: {\n//     provider: \"deepgram\",\n//     model: \"nova-2\",\n//     language: \"en\",\n//   },\n//   voice: {\n//     provider: \"11labs\",\n//     voiceId: \"sarah\",\n//     stability: 0.4,\n//     similarityBoost: 0.8,\n//     speed: 0.9,\n//     style: 0.5,\n//     useSpeakerBoost: true,\n//   },\n//   model: {\n//     provider: \"openai\",\n//     model: \"gpt-4\",\n//     messages: [\n//       {\n//         role: \"system\",\n//         content: `You are a professional job interviewer conducting a real-time voice interview with a candidate. Your goal is to assess their qualifications, motivation, and fit for the role.\n\n// Interview Guidelines:\n// Follow the structured question flow:\n// {{questions}}\n\n// Engage naturally & react appropriately:\n// Listen actively to responses and acknowledge them before moving forward.\n// Ask brief follow-up questions if a response is vague or requires more detail.\n// Keep the conversation flowing smoothly while maintaining control.\n// Be professional, yet warm and welcoming:\n\n// Use official yet friendly language.\n// Keep responses concise and to the point (like in a real voice interview).\n// Avoid robotic phrasing—sound natural and conversational.\n// Answer the candidate’s questions professionally:\n\n// If asked about the role, company, or expectations, provide a clear and relevant answer.\n// If unsure, redirect the candidate to HR for more details.\n\n// Conclude the interview properly:\n// Thank the candidate for their time.\n// Inform them that the company will reach out soon with feedback.\n// End the conversation on a polite and positive note.\n\n\n// - Be sure to be professional and polite.\n// - Keep all your responses short and simple. Use official language, but be kind and welcoming.\n// - This is a voice conversation, so keep your responses short, like in a real conversation. Don't ramble for too long.`,\n//       },\n//     ],\n//   },\n// };\n\n// export const feedbackSchema = z.object({\n//   totalScore: z.number(),\n//   categoryScores: z.tuple([\n//     z.object({\n//       name: z.literal(\"Communication Skills\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//     z.object({\n//       name: z.literal(\"Technical Knowledge\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//     z.object({\n//       name: z.literal(\"Problem Solving\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//     z.object({\n//       name: z.literal(\"Cultural Fit\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//     z.object({\n//       name: z.literal(\"Confidence and Clarity\"),\n//       score: z.number(),\n//       comment: z.string(),\n//     }),\n//   ]),\n//   strengths: z.array(z.string()),\n//   areasForImprovement: z.array(z.string()),\n//   finalAssessment: z.string(),\n// });\n\nexport const interviewCovers = [\n  \"/adobe.png\",\n  \"/amazon.png\",\n  \"/facebook.png\",\n  \"/hostinger.png\",\n  \"/pinterest.png\",\n  \"/quora.png\",\n  \"/reddit.png\",\n  \"/skype.png\",\n  \"/spotify.png\",\n  \"/telegram.png\",\n  \"/tiktok.png\",\n  \"/yahoo.png\",\n];\n\nexport const dummyInterviews: Interview[] = [\n  {\n    id: \"1\",\n    userId: \"user1\",\n    role: \"Frontend Developer\",\n    type: \"Technical\",\n    techstack: [\"React\", \"TypeScript\", \"Next.js\", \"Tailwind CSS\"],\n    level: \"Junior\",\n    questions: [\"What is React?\"],\n    finalized: false,\n    createdAt: \"2024-03-15T10:00:00Z\",\n  },\n  {\n    id: \"2\",\n    userId: \"user1\",\n    role: \"Full Stack Developer\",\n    type: \"Mixed\",\n    techstack: [\"Node.js\", \"Express\", \"MongoDB\", \"React\"],\n    level: \"Senior\",\n    questions: [\"What is Node.js?\"],\n    finalized: false,\n    createdAt: \"2024-03-14T15:30:00Z\",\n  },\n];\n"],"names":[],"mappings":"AAAA,8DAA8D;AAC9D,2BAA2B;;;;;;AAEpB,MAAM,WAAW;IACtB,YAAY;IACZ,SAAS;IACT,OAAO;IACP,WAAW;IACX,QAAQ;IACR,MAAM;IACN,UAAU;IACV,OAAO;IACP,KAAK;IACL,cAAc;IACd,WAAW;IACX,SAAS;IACT,WAAW;IACX,QAAQ;IACR,MAAM;IACN,SAAS;IACT,OAAO;IACP,UAAU;IACV,OAAO;IACP,YAAY;IACZ,QAAQ;IACR,UAAU;IACV,QAAQ;IACR,YAAY;IACZ,KAAK;IACL,OAAO;IACP,KAAK;IACL,cAAc;IACd,QAAQ;IACR,WAAW;IACX,mBAAmB;IACnB,OAAO;IACP,MAAM;IACN,MAAM;IACN,KAAK;IACL,MAAM;IACN,MAAM;IACN,MAAM;IACN,aAAa;IACb,UAAU;IACV,WAAW;IACX,QAAQ;IACR,YAAY;IACZ,IAAI;IACJ,YAAY;IACZ,IAAI;IACJ,cAAc;IACd,WAAW;IACX,SAAS;IACT,YAAY;IACZ,SAAS;IACT,OAAO;IACP,eAAe;IACf,YAAY;IACZ,UAAU;IACV,QAAQ;IACR,SAAS;IACT,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,OAAO;IACP,aAAa;IACb,UAAU;IACV,QAAQ;IACR,aAAa;IACb,UAAU;IACV,KAAK;IACL,MAAM;IACN,KAAK;IACL,QAAQ;IACR,QAAQ;IACR,WAAW;IACX,OAAO;IACP,QAAQ;IACR,OAAO;IACP,MAAM;IACN,OAAO;IACP,UAAU;IACV,SAAS;IACT,MAAM;IACN,OAAO;IACP,MAAM;IACN,OAAO;IACP,MAAM;IACN,WAAW;IACX,QAAQ;IACR,MAAM;IACN,QAAQ;IACR,WAAW;IACX,YAAY;IACZ,SAAS;IACT,QAAQ;IACR,eAAe;AACjB;AA8FO,MAAM,kBAAkB;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,kBAA+B;IAC1C;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAS;YAAc;YAAW;SAAe;QAC7D,OAAO;QACP,WAAW;YAAC;SAAiB;QAC7B,WAAW;QACX,WAAW;IACb;IACA;QACE,IAAI;QACJ,QAAQ;QACR,MAAM;QACN,MAAM;QACN,WAAW;YAAC;YAAW;YAAW;YAAW;SAAQ;QACrD,OAAO;QACP,WAAW;YAAC;SAAmB;QAC/B,WAAW;QACX,WAAW;IACb;CACD","debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Chrome/Documents/preppath/lib/utils.ts"],"sourcesContent":["import { interviewCovers, mappings } from \"@/constants\";\nimport { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nconst techIconBaseURL = \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons\";\n\nconst normalizeTechName = (tech: string) => {\n  const key = tech.toLowerCase().replace(/\\.js$/, \"\").replace(/\\s+/g, \"\");\n  return mappings[key as keyof typeof mappings];\n};\n\nconst checkIconExists = async (url: string) => {\n  try {\n    const response = await fetch(url, { method: \"HEAD\" });\n    return response.ok; // Returns true if the icon exists\n  } catch {\n    return false;\n  }\n};\n\nexport const getTechLogos = async (techArray: string[]) => {\n  const logoURLs = techArray.map((tech) => {\n    const normalized = normalizeTechName(tech);\n    return {\n      tech,\n      url: `${techIconBaseURL}/${normalized}/${normalized}-original.svg`,\n    };\n  });\n\n  const results = await Promise.all(\n    logoURLs.map(async ({ tech, url }) => ({\n      tech,\n      url: (await checkIconExists(url)) ? url : \"/tech.svg\",\n    }))\n  );\n\n  return results;\n};\n\nexport const getRandomInterviewCover = () => {\n  const randomIndex = Math.floor(Math.random() * interviewCovers.length);\n  return `/covers${interviewCovers[randomIndex]}`;\n};\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEA,MAAM,kBAAkB;AAExB,MAAM,oBAAoB,CAAC;IACzB,MAAM,MAAM,KAAK,WAAW,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ;IACpE,OAAO,kHAAA,CAAA,WAAQ,CAAC,IAA6B;AAC/C;AAEA,MAAM,kBAAkB,OAAO;IAC7B,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,KAAK;YAAE,QAAQ;QAAO;QACnD,OAAO,SAAS,EAAE,EAAE,kCAAkC;IACxD,EAAE,OAAM;QACN,OAAO;IACT;AACF;AAEO,MAAM,eAAe,OAAO;IACjC,MAAM,WAAW,UAAU,GAAG,CAAC,CAAC;QAC9B,MAAM,aAAa,kBAAkB;QACrC,OAAO;YACL;YACA,KAAK,GAAG,gBAAgB,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,aAAa,CAAC;QACpE;IACF;IAEA,MAAM,UAAU,MAAM,QAAQ,GAAG,CAC/B,SAAS,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,GAAK,CAAC;YACrC;YACA,KAAK,AAAC,MAAM,gBAAgB,OAAQ,MAAM;QAC5C,CAAC;IAGH,OAAO;AACT;AAEO,MAAM,0BAA0B;IACrC,MAAM,cAAc,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,kHAAA,CAAA,kBAAe,CAAC,MAAM;IACrE,OAAO,CAAC,OAAO,EAAE,kHAAA,CAAA,kBAAe,CAAC,YAAY,EAAE;AACjD","debugId":null}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Chrome/Documents/preppath/components/DisplayTechIcons.tsx"],"sourcesContent":["import { cn, getTechLogos } from \"@/lib/utils\";\r\nimport React from \"react\";\r\nimport Image from \"next/image\";\r\n\r\nconst DisplayTechIcons = async ({techStack}: TechIconProps) => {\r\n    const techIcons = await getTechLogos(techStack);\r\n    return (\r\n        <div className=\"flex flex-row\">{techIcons.slice(0, 3).map(({ tech, url }, index) => (\r\n            <div key={tech} className={cn(\"relative group bg-dark-300 rounded-full p-2 flex-center\", index >= 1 && '-ml-3')}>\r\n                <span className=\"tech-tooltip\">{tech}</span>\r\n                <Image src={url} alt={tech} width={100} height={100} className=\"object-fit size-[40px] size-5-\" />\r\n            </div>\r\n        ))}</div>\r\n    )\r\n}\r\nexport default DisplayTechIcons"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,mBAAmB,OAAO,EAAC,SAAS,EAAgB;IACtD,MAAM,YAAY,MAAM,CAAA,GAAA,4GAAA,CAAA,eAAY,AAAD,EAAE;IACrC,qBACI,8OAAC;QAAI,WAAU;kBAAiB,UAAU,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,sBACtE,8OAAC;gBAAe,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,2DAA2D,SAAS,KAAK;;kCACnG,8OAAC;wBAAK,WAAU;kCAAgB;;;;;;kCAChC,8OAAC,6HAAA,CAAA,UAAK;wBAAC,KAAK;wBAAK,KAAK;wBAAM,OAAO;wBAAK,QAAQ;wBAAK,WAAU;;;;;;;eAFzD;;;;;;;;;;AAMtB;uCACe","debugId":null}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Chrome/Documents/preppath/components/InterviewCard.tsx"],"sourcesContent":["import { getRandomInterviewCover } from '@/lib/utils';\r\nimport dayjs from 'dayjs'\r\nimport Image from 'next/image'\r\nimport Link from 'next/link'\r\nimport DisplayTechIcons from './DisplayTechIcons';\r\n\r\n\r\nconst InterviewCard = async ({ interviewId, userId, role, type, techstack, createdAt }: InterviewCardProps) => {\r\n    const feedback = null as Feedback | null;\r\n    const normalizedType = /mix/gi.test(type) ? 'Mixed' : type;\r\n    const formattedDate = dayjs(feedback?.createdAt || createdAt || Date.now()).format('MMM D, YYYY');\r\n    return (\r\n        // <div className=\"card-border w-[360px] max-sm:w-full min-h-96\">\r\n            <div className=\"card-interview\">\r\n                <div>\r\n                    <div className=\"absolute top-0 right-0 w-fit px-4 py-2 rounded-bl-lg bg-light-400\">\r\n                        <p className=\"badge-text\">{normalizedType}</p>\r\n                    </div>\r\n                    <Image src={getRandomInterviewCover()} alt=\"cover\" width={90} height={90} className=\"rounded-full object-fit size-[90px]\" />\r\n                        <h3 className=\"mt-5 capitalize\">\r\n                            {role} Interview\r\n                        </h3>\r\n                        <div className=\"flex flex-row gap-5 mt-3\">\r\n                            <div className=\"flex flex-row gap-2\">\r\n                                <Image src=\"/calender.png\" alt=\"calender\" width={22} height={22} />\r\n                                <p>{formattedDate}</p>\r\n                            </div>\r\n                            <div className=\"flex flex-row gap-2 items-center\">\r\n                                <Image src=\"/star.svg\" alt=\"star\" width={22} height={22} />\r\n                                <p>{feedback?.totalScore || '---'}/100</p>\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"line-clam-2 mt-5\">\r\n                            {feedback?.finalAssessment || \"No feedback yet\"}\r\n                        </p>\r\n                </div>\r\n                <div className=\"flex flex-row justify-between\">\r\n                    <DisplayTechIcons techStack={techstack} />\r\n\r\n                    <button className=\"btn-primary\">\r\n                        <Link href={feedback\r\n                            ? '/interview/${interviewId}/feedback' : 'interview/${interviewId}'\r\n                        }>\r\n                            {feedback ? 'View Feedback' : 'Take Interview'}\r\n                        </Link>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        // </div>\r\n    )\r\n}\r\nexport default InterviewCard\r\n// import { cn } from \"@/lib/utils\""],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAGA,MAAM,gBAAgB,OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAsB;IACtG,MAAM,WAAW;IACjB,MAAM,iBAAiB,QAAQ,IAAI,CAAC,QAAQ,UAAU;IACtD,MAAM,gBAAgB,CAAA,GAAA,qIAAA,CAAA,UAAK,AAAD,EAAE,UAAU,aAAa,aAAa,KAAK,GAAG,IAAI,MAAM,CAAC;IACnF,OACI,iEAAiE;kBAC7D,8OAAC;QAAI,WAAU;;0BACX,8OAAC;;kCACG,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC;4BAAE,WAAU;sCAAc;;;;;;;;;;;kCAE/B,8OAAC,6HAAA,CAAA,UAAK;wBAAC,KAAK,CAAA,GAAA,4GAAA,CAAA,0BAAuB,AAAD;wBAAK,KAAI;wBAAQ,OAAO;wBAAI,QAAQ;wBAAI,WAAU;;;;;;kCAChF,8OAAC;wBAAG,WAAU;;4BACT;4BAAK;;;;;;;kCAEV,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAI,WAAU;;kDACX,8OAAC,6HAAA,CAAA,UAAK;wCAAC,KAAI;wCAAgB,KAAI;wCAAW,OAAO;wCAAI,QAAQ;;;;;;kDAC7D,8OAAC;kDAAG;;;;;;;;;;;;0CAER,8OAAC;gCAAI,WAAU;;kDACX,8OAAC,6HAAA,CAAA,UAAK;wCAAC,KAAI;wCAAY,KAAI;wCAAO,OAAO;wCAAI,QAAQ;;;;;;kDACrD,8OAAC;;4CAAG,UAAU,cAAc;4CAAM;;;;;;;;;;;;;;;;;;;kCAG1C,8OAAC;wBAAE,WAAU;kCACR,UAAU,mBAAmB;;;;;;;;;;;;0BAG1C,8OAAC;gBAAI,WAAU;;kCACX,8OAAC,+HAAA,CAAA,UAAgB;wBAAC,WAAW;;;;;;kCAE7B,8OAAC;wBAAO,WAAU;kCACd,cAAA,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAM,6EACiC;sCAExC,6EAA6B;;;;;;;;;;;;;;;;;;;;;;;AAO1D;uCACe,cACf,mCAAmC","debugId":null}},
    {"offset": {"line": 559, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Chrome/Documents/preppath/app/%28root%29/page.tsx"],"sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\n// import InterviewCard from '../../components/InterviewCard';\nimport { dummyInterviews } from '@/constants';\nimport InterviewCard from '@/components/InterviewCard';\n\nconst Page = () => {\n  return (\n    <>\n      <section className=\"card-cta\">\n        <div className=\"flex flex-col gap-6\">\n          <h2>Get interview-ready by practicing mock sessions and receiving instant feedback</h2>\n          <p className=\"text-lg\">Let's Practice</p>\n\n          <button className=\"btn-primary max-sm:w-full\">\n            <Link href=\"/interview\">Start</Link>\n          </button>\n\n        </div>\n        <Image src=\"/robot.png\" alt=\"robot\" width={400} height={400} className=\"max-sm:hidden\"/>\n      </section>\n\n      <section className=\"flex flex-col gap-6 items-center justify-center\">\n        <h2 className=\"text-2xl\">Your Interviews</h2>\n\n        <div className=\"interview-section flex justify-center gap-5\">\n          {dummyInterviews.map((interview) => (\n            <InterviewCard {...interview} key={interview.id} />\n          ))}\n\n          {/* <p>No records yet</p> */}\n        </div>\n      \n      </section>\n      <section className=\"flex flex-col gap-6 items-center justify-center\">\n        <h2>Let's Take an Interview</h2>\n\n        <div className=\"interview-section flex justify-center gap-5\">\n          {dummyInterviews.map((interview) => (\n            <InterviewCard {...interview} key={interview.id} />\n          ))}\n        </div>\n          <p>Tere are no interviews available</p>\n      </section>\n    </>\n  )\n}\n\nexport default Page"],"names":[],"mappings":";;;;;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;;;;;;;AAEA,MAAM,OAAO;IACX,qBACE;;0BACE,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;0CAAG;;;;;;0CACJ,8OAAC;gCAAE,WAAU;0CAAU;;;;;;0CAEvB,8OAAC;gCAAO,WAAU;0CAChB,cAAA,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;8CAAa;;;;;;;;;;;;;;;;;kCAI5B,8OAAC,6HAAA,CAAA,UAAK;wBAAC,KAAI;wBAAa,KAAI;wBAAQ,OAAO;wBAAK,QAAQ;wBAAK,WAAU;;;;;;;;;;;;0BAGzE,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAG,WAAU;kCAAW;;;;;;kCAEzB,8OAAC;wBAAI,WAAU;kCACZ,kHAAA,CAAA,kBAAe,CAAC,GAAG,CAAC,CAAC,0BACpB,4NAAC,4HAAA,CAAA,UAAa;gCAAE,GAAG,SAAS;gCAAE,KAAK,UAAU,EAAE;;;;;;;;;;;;;;;;;;;0BAOrD,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;kCAAG;;;;;;kCAEJ,8OAAC;wBAAI,WAAU;kCACZ,kHAAA,CAAA,kBAAe,CAAC,GAAG,CAAC,CAAC,0BACpB,4NAAC,4HAAA,CAAA,UAAa;gCAAE,GAAG,SAAS;gCAAE,KAAK,UAAU,EAAE;;;;;;;;;;;;;kCAGjD,8OAAC;kCAAE;;;;;;;;;;;;;;AAIb;uCAEe","debugId":null}}]
}